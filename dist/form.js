const a=document.querySelectorAll(".step-text-c"),p=document.querySelector(".progress-bar"),d={attributes:!0};function u(e){e.forEach(function(s){if(s.type==="attributes"&&s.attributeName==="class"){let t=Array.from(a).findIndex(i=>i.classList.contains("current"));p.style.width=`${(t+1)/a.length*100}%`}})}let f=new MutationObserver(u);a.forEach(e=>{f.observe(e,d)});const r={fname:"",lname:"",mname:"",dob:"",ssn:"",address:"",city:"",state:"",zip:"",email:"",marital:"",residency:"",employed:"",sex:"",disabled:"",numinhouse:"",EmerContactName:"",EmerContactPhone1:""},c={patwages:"",patdisab:"",patunemploy:""},o={fname:"",mname:"",lname:"",email:"",phone:"",fax:"",address:"",city:"",state:"",zip:""},h=document.querySelector('[cd="submit-data"]');let l=0,n="";const m="https://www.medserviceswebpap.com/api/patient/createpatient",w="https://www.medserviceswebpap.com/api/physician/createphysician",y="https://www.medserviceswebpap.com/auth/token?hcpid=89",b={grant_type:"password",username:"apiuser",password:"123456"};async function k(e,s){const t=await fetch(e,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams(s).toString()});if(!t.ok)throw new Error(t.statusText);return t.json()}async function g(e,s){try{const t=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(s)});if(!t.ok)throw new Error("Network response was not ok");await t.json()}catch(t){console.log(t)}}async function v(e,s){try{const t=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(s)});if(!t.ok)throw new Error("Network response was not ok");l=(await t.json()).Id}catch(t){console.log(t)}}async function _(e,s){try{if(!(await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(s)})).ok)throw new Error("Network response was not ok")}catch(t){console.log(t)}}h.addEventListener("click",()=>{patientAddress&&patientAddress.forEach(e=>{switch(e.types[0]){case"street_number":{r.address=`${e.long_name} `;break}case"route":{r.address+=e.short_name;break}case"locality":r.city=e.long_name;break;case"administrative_area_level_1":{r.state=e.short_name;break}}}),doctorAddress&&doctorAddress.forEach(e=>{switch(e.types[0]){case"street_number":{o.address=`${e.long_name} `;break}case"route":{o.address+=e.short_name;break}case"locality":o.city=e.long_name;break;case"administrative_area_level_1":{o.state=e.short_name;break}}}),all_data.forEach(e=>{if(e.field==="patwages"||e.field==="patdisab"||e.field==="patunemploy"){c[e.field]=e.value;return}if(e.field.includes("doc-")){let s=e.field.split("-")[1];o[s]=e.value;return}if(e.field==="month"){r.dob=`${e.value}`;return}if(e.field==="day"||e.field==="year"){r.dob=`${r.dob}/${e.value}`;return}if(e.field==="residency"||e.field==="disabled"){r[e.field]=e.value==="Yes"?"true":"false";return}if(e.field==="ssn"){r[e.field]=e.value.replace(/-/g,"");return}r[e.field]=e.value}),k(y,b).then(e=>{n=e.access_token,v(m,r).then(()=>{let s=`https://www.medserviceswebpap.com/api/patient/updatepatientincome?patientId=${l}`;_(s,c)}),g(w,o)})});
