document.addEventListener("DOMContentLoaded",async()=>{const e=sessionStorage.getItem("formData"),t=e?JSON.parse(e):null;t?await S(t).then(()=>{sessionStorage.clear()}):console.log("No form data found in sessionStorage.")});let i=0,n="";const w="https://www.medserviceswebpap.com/api/patient/createpatient",c="https://www.medserviceswebpap.com/api/physician/createphysician",h="https://www.medserviceswebpap.com/auth/token?hcpid=89",l={grant_type:"password",username:"apiuser",password:"123456"};async function y(e,t){const o=await fetch(e,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams(t).toString()});if(!o.ok)throw new Error(o.statusText);return o.json()}async function p(e,t){try{const o=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(t)});if(!o.ok)throw new Error("Network response was not ok");const a=await o.json();t.id=a.Id}catch(o){console.log(o)}}async function u(e,t){try{const o=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(t)});if(!o.ok)throw new Error("Network response was not ok");i=(await o.json()).Id}catch(o){console.log(o)}}async function m(e,t){try{if(!(await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(t)})).ok)throw new Error("Network response was not ok")}catch(o){console.log(o)}}async function g(e,t){let o;t==="private"?o={privateins:"true"}:o={none:"true"};try{if(!(await fetch(e,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(o)})).ok)throw new Error("Network response was not ok")}catch(a){console.log(a)}}async function f(e){try{const t=await fetch(e,{method:"get",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`}});if(!t.ok)throw new Error("Network response was not ok");return await t.json()}catch(t){console.log(t)}}async function k(e){try{const t=await fetch("https://www.medserviceswebpap.com/api/paporders/additem",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify(e)});if(!t.ok)throw new Error("Network response was not ok");return await t.json()}catch(t){console.log(t)}}async function S(e){const t=document.querySelector(".loader-s");return t.style.display="flex",new Promise(async(o,a)=>{try{await y(h,l).then(r=>{n=r.access_token}).then(async()=>{await u(w,e.patientData);let r=`https://www.medserviceswebpap.com/api/patient/updatepatientincome?patientId=${i}`;await m(r,e.patientIncomeData),e.drugData.CustomerId=`${i}`;let d=`https://www.medserviceswebpap.com/api/patient/updatepatientinsurance?patientId=${i}`;await g(d,e.insurance),await p(c,e.doctorData),e.doctor2Data.fname!==""&&await p(c,e.doctor2Data),await Promise.all(e.drugData.OrderItems.map(async s=>{await f(`https://www.medserviceswebpap.com/api/physician/getphysician?fname=${e.doctorData.fname}&lname=${e.doctorData.lname}`),s.physicianid.includes(e.doctorData.fname)&&s.physicianid.includes(e.doctorData.lname)?s.physicianid=e.doctorData.id:s.physicianid.includes(e.doctor2Data.fname)&&s.physicianid.includes(e.doctor2Data.lname)&&(s.physicianid=e.doctor2Data.id)})),await k(e.drugData)}),t.classList.add("hide"),setTimeout(()=>{t.style.display="none"},200),o()}catch(r){a(r)}})}
